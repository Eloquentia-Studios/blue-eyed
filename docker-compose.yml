services:
  redis:
    image: redis:7.0.11-alpine
    ports:
      - 6379:6379
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: blue-eyed
    ports:
      - 5432:5432
    restart: unless-stopped

  traefik:
    image: traefik:latest
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - 80:80
      - 8080:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
    labels:
      - "traefik.enable=true"

      - "traefik.http.middlewares.blue-eyed.forwardauth.address=http://blue-eyed/auth/traefik"
      - "traefik.http.middlewares.blue-eyed.forwardauth.trustForwardHeader=true"
      - "traefik.http.middlewares.blue-eyed.forwardauth.authResponseHeaders=X-Auth-User, X-Secret, authorization"

  whoami:
    image: traefik/whoami
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`whoami.localhost`)"
      - "traefik.http.routers.whoami.entrypoints=web"
      - "traefik.http.routers.whoami.middlewares=blue-eyed@docker"
    restart: unless-stopped

  blue-eyed:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.auth.rule=Host(`auth.localhost`) || HostRegexp(`{subdomain:[a-z0-9-]+}.localhost`) && PathPrefix(`/auth.blue-eyed/`)"
      - "traefik.http.routers.auth.entrypoints=web"
    command: [nginx-debug, '-g', 'daemon off;']